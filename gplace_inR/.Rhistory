lat = "NULL"
}
det <- cbind(det, lat)
# Get google place long
if (length(tmp$result$formatted_address) != 0) {
long = tmp$result$geometry$location$lng
} else{
long = "NULL"
}
det <- cbind(det, long)
# Get google place category
if (length(tmp$result$formatted_address) != 0) {
category = as.character(place_type[i])
} else{
category = "NULL"
}
det <- cbind(det, category)
# Get google place icon link
if (length(tmp$result$icon) != 0) {
icon_link = tmp$result$icon
} else{
icon_link = "NULL"
}
det <- cbind(det, icon_link)
# Get google place rating
if (length(tmp$result$rating) != 0) {
rating = tmp$result$rating
} else{
rating = "NULL"
}
det <- cbind(det, rating)
# Get google places website
if (length(tmp$result$website) != 0) {
website = tmp$result$website
} else{
website = "NULL"
}
det <- cbind(det, website)
#       if (length(tmp$result$id)!=0){
#         id = tmp$result$id
#       }else{
#         id = "NULL"
#       }
# det <- cbind(det,id)
# # Get google place url
#       if (length(tmp$result$url)!=0){
#         url = tmp$result$url
#       }else{
#         url = "NULL"
#       }
# det <- cbind(det,url)
details <- rbind(details, det)
fwrite(x = as.data.table(det),
file = details_dir,
append = TRUE)
print(paste("Done Processing", i, "Places"))
Sys.sleep(0.01)
}
# Set working directory
# setwd('GitHub/gplace_inR/')
# Load require packages
library(googleway)
library(data.table)
library(mongolite)
# Set googple places api keys
# key <- c('AIzaSyD6iU9O03sGdnSARGSlrLcLCncmRn3Ejes') # maggie
key <- c('AIzaSyCaKsmC0yi880Xbxp6-Tc6fd9Df8u2fGaw') # gay marie
# Randomize long lat for default long lat entry
# ll <- c(14.620448, 121.053393) # cubao
# ll <- c(14.556595, 121.024139) # makati
ll <- c(14.576569, 121.052659) # ortigas
# ll <- c(14.577128, 121.033677) # mandaluyong
# ll <- c(14.606519, 120.984254) # manila
# ll <- c(14.536578, 120.991551) # pasay
# ll <- c(14.573249, 121.082198) # pasig
# ll <- c(14.650645, 121.049363) # quezon memorial cirle
# ll <- c(14.602690, 121.033207) # san juan city (restaurant next)
# ll <- c(14.650988, 121.115031) # marikina
# ll <- c(14.552853, 121.051530) # BGC
# ll <- c(14.545514, 121.068274) # pateros
# ll <- c(14.517990, 121.049635) # taguig
# ll <- c(14.605458, 121.079994) # eastwood
# Set default radius in meters
rad <- 10000
# Relevant Place Type
p.types <- c('movie_theater')
# Dir for the radar data
radar_dir <- paste0('../../Moonlight/google-places/g_radar_', 'moviehouses_batch1.csv')
# connect to the db
mnew <- mongo(collection = 'g_place', db = 'googleplaces')
# Dir for the details data
details_dir <- paste0('../../Moonlight/google-places/g_places_', 'moviehouses_batch1.csv')
# Get place id of nearby places using Google Places Radar API
source('init.R')
# longlat is should be a vector of longatitude and latitude
# rad is numeric value in meter unit that determines the boundery from the center
# p.types is the type of places that will be included in the query
# getting all pace types
radar <- NULL
for (i in 1:length(p.types)){
df <- google_places(location = ll, radar = TRUE, radius = rad, place_type = p.types[i], key = key)
if (length(df$results)!=0){
df_ <- cbind(df$results$geometry$location,
id = df$results$id,
place_id = df$results$place_id,
place_type = p.types[i])
radar <- rbind(radar, df_)
fwrite(df_, radar_dir, append = FALSE)
print(paste('Found', nrow(df_), 'places under place type', p.types[i]))
} else{
print(paste('Type', p.types[i], 'cannot be found in this area'))
}
Sys.sleep(1)
}
# Get place id of nearby places using Google Places Radar API
source('init.R')
# read the radar data with unfinished details
df <- fread(radar_dir)
attach(df)
details <- NULL
for (i in 1:length(place_id)) {
tmp <-
google_place_details(place_id = as.character(place_id[i]), key = key)
if (length(tmp$result) != 0) {
mnew$insert(tmp)
} else{
break
}
# Get google place name
if (length(tmp$result$name) != 0) {
name = tmp$result$name
} else{
name = "NULL"
}
det <- cbind(place_id = as.character(place_id[i]), name)
# Get google contact number
if (length(tmp$result$formatted_phone_number) != 0) {
phone_number = tmp$result$formatted_phone_number
} else{
phone_number = "NULL"
}
det <- cbind(det, phone_number)
# Get google contact number
if (length(tmp$result$formatted_phone_number) != 0) {
international_phone_number = tmp$result$formatted_phone_number
} else{
international_phone_number = "NULL"
}
det <- cbind(det, international_phone_number)
# Get google place address
if (length(tmp$result$formatted_address) != 0) {
address = tmp$result$formatted_address
} else{
address = "NULL"
}
det <- cbind(det, address)
# Get google place lat
if (length(tmp$result$formatted_address) != 0) {
lat = tmp$result$geometry$location$lat
} else{
lat = "NULL"
}
det <- cbind(det, lat)
# Get google place long
if (length(tmp$result$formatted_address) != 0) {
long = tmp$result$geometry$location$lng
} else{
long = "NULL"
}
det <- cbind(det, long)
# Get google place category
if (length(tmp$result$formatted_address) != 0) {
category = as.character(place_type[i])
} else{
category = "NULL"
}
det <- cbind(det, category)
# Get google place icon link
if (length(tmp$result$icon) != 0) {
icon_link = tmp$result$icon
} else{
icon_link = "NULL"
}
det <- cbind(det, icon_link)
# Get google place rating
if (length(tmp$result$rating) != 0) {
rating = tmp$result$rating
} else{
rating = "NULL"
}
det <- cbind(det, rating)
# Get google places website
if (length(tmp$result$website) != 0) {
website = tmp$result$website
} else{
website = "NULL"
}
det <- cbind(det, website)
#       if (length(tmp$result$id)!=0){
#         id = tmp$result$id
#       }else{
#         id = "NULL"
#       }
# det <- cbind(det,id)
# # Get google place url
#       if (length(tmp$result$url)!=0){
#         url = tmp$result$url
#       }else{
#         url = "NULL"
#       }
# det <- cbind(det,url)
details <- rbind(details, det)
fwrite(x = as.data.table(det),
file = details_dir,
append = TRUE)
print(paste("Done Processing", i, "Places"))
Sys.sleep(0.01)
}
# Set working directory
# setwd('GitHub/gplace_inR/')
# Load require packages
library(googleway)
library(data.table)
library(mongolite)
# Set googple places api keys
# key <- c('AIzaSyD6iU9O03sGdnSARGSlrLcLCncmRn3Ejes') # maggie
key <- c('AIzaSyCaKsmC0yi880Xbxp6-Tc6fd9Df8u2fGaw') # gay marie
# Randomize long lat for default long lat entry
# ll <- c(14.620448, 121.053393) # cubao
# ll <- c(14.556595, 121.024139) # makati
# ll <- c(14.576569, 121.052659) # ortigas
ll <- c(14.577128, 121.033677) # mandaluyong
# ll <- c(14.606519, 120.984254) # manila
# ll <- c(14.536578, 120.991551) # pasay
# ll <- c(14.573249, 121.082198) # pasig
# ll <- c(14.650645, 121.049363) # quezon memorial cirle
# ll <- c(14.602690, 121.033207) # san juan city (restaurant next)
# ll <- c(14.650988, 121.115031) # marikina
# ll <- c(14.552853, 121.051530) # BGC
# ll <- c(14.545514, 121.068274) # pateros
# ll <- c(14.517990, 121.049635) # taguig
# ll <- c(14.605458, 121.079994) # eastwood
# Set default radius in meters
rad <- 10000
# Relevant Place Type
p.types <- c('movie_theater')
# Dir for the radar data
radar_dir <- paste0('../../Moonlight/google-places/g_radar_', 'moviehouses_batch1.csv')
# connect to the db
mnew <- mongo(collection = 'g_place', db = 'googleplaces')
# Dir for the details data
details_dir <- paste0('../../Moonlight/google-places/g_places_', 'moviehouses_batch1.csv')
# Get place id of nearby places using Google Places Radar API
source('init.R')
# longlat is should be a vector of longatitude and latitude
# rad is numeric value in meter unit that determines the boundery from the center
# p.types is the type of places that will be included in the query
# getting all pace types
radar <- NULL
for (i in 1:length(p.types)){
df <- google_places(location = ll, radar = TRUE, radius = rad, place_type = p.types[i], key = key)
if (length(df$results)!=0){
df_ <- cbind(df$results$geometry$location,
id = df$results$id,
place_id = df$results$place_id,
place_type = p.types[i])
radar <- rbind(radar, df_)
fwrite(df_, radar_dir, append = FALSE)
print(paste('Found', nrow(df_), 'places under place type', p.types[i]))
} else{
print(paste('Type', p.types[i], 'cannot be found in this area'))
}
Sys.sleep(1)
}
# Get place id of nearby places using Google Places Radar API
source('init.R')
# read the radar data with unfinished details
df <- fread(radar_dir)
attach(df)
details <- NULL
for (i in 1:length(place_id)) {
tmp <-
google_place_details(place_id = as.character(place_id[i]), key = key)
if (length(tmp$result) != 0) {
mnew$insert(tmp)
} else{
break
}
# Get google place name
if (length(tmp$result$name) != 0) {
name = tmp$result$name
} else{
name = "NULL"
}
det <- cbind(place_id = as.character(place_id[i]), name)
# Get google contact number
if (length(tmp$result$formatted_phone_number) != 0) {
phone_number = tmp$result$formatted_phone_number
} else{
phone_number = "NULL"
}
det <- cbind(det, phone_number)
# Get google contact number
if (length(tmp$result$formatted_phone_number) != 0) {
international_phone_number = tmp$result$formatted_phone_number
} else{
international_phone_number = "NULL"
}
det <- cbind(det, international_phone_number)
# Get google place address
if (length(tmp$result$formatted_address) != 0) {
address = tmp$result$formatted_address
} else{
address = "NULL"
}
det <- cbind(det, address)
# Get google place lat
if (length(tmp$result$formatted_address) != 0) {
lat = tmp$result$geometry$location$lat
} else{
lat = "NULL"
}
det <- cbind(det, lat)
# Get google place long
if (length(tmp$result$formatted_address) != 0) {
long = tmp$result$geometry$location$lng
} else{
long = "NULL"
}
det <- cbind(det, long)
# Get google place category
if (length(tmp$result$formatted_address) != 0) {
category = as.character(place_type[i])
} else{
category = "NULL"
}
det <- cbind(det, category)
# Get google place icon link
if (length(tmp$result$icon) != 0) {
icon_link = tmp$result$icon
} else{
icon_link = "NULL"
}
det <- cbind(det, icon_link)
# Get google place rating
if (length(tmp$result$rating) != 0) {
rating = tmp$result$rating
} else{
rating = "NULL"
}
det <- cbind(det, rating)
# Get google places website
if (length(tmp$result$website) != 0) {
website = tmp$result$website
} else{
website = "NULL"
}
det <- cbind(det, website)
#       if (length(tmp$result$id)!=0){
#         id = tmp$result$id
#       }else{
#         id = "NULL"
#       }
# det <- cbind(det,id)
# # Get google place url
#       if (length(tmp$result$url)!=0){
#         url = tmp$result$url
#       }else{
#         url = "NULL"
#       }
# det <- cbind(det,url)
details <- rbind(details, det)
fwrite(x = as.data.table(det),
file = details_dir,
append = TRUE)
print(paste("Done Processing", i, "Places"))
Sys.sleep(0.01)
}
df <- fread('../../Moonlight/google-places/g_places_moviehouses_batch1.csv')
df1 <- df[!duplicated(df),]
nrow(df1)
ll <- c(14.606519, 120.984254) # manila
# Get place id of nearby places using Google Places Radar API
source('init.R')
# longlat is should be a vector of longatitude and latitude
# rad is numeric value in meter unit that determines the boundery from the center
# p.types is the type of places that will be included in the query
# getting all pace types
radar <- NULL
for (i in 1:length(p.types)){
df <- google_places(location = ll, radar = TRUE, radius = rad, place_type = p.types[i], key = key)
if (length(df$results)!=0){
df_ <- cbind(df$results$geometry$location,
id = df$results$id,
place_id = df$results$place_id,
place_type = p.types[i])
radar <- rbind(radar, df_)
fwrite(df_, radar_dir, append = FALSE)
print(paste('Found', nrow(df_), 'places under place type', p.types[i]))
} else{
print(paste('Type', p.types[i], 'cannot be found in this area'))
}
Sys.sleep(1)
}
# Get place id of nearby places using Google Places Radar API
source('init.R')
# read the radar data with unfinished details
df <- fread(radar_dir)
attach(df)
details <- NULL
for (i in 1:length(place_id)) {
tmp <-
google_place_details(place_id = as.character(place_id[i]), key = key)
if (length(tmp$result) != 0) {
mnew$insert(tmp)
} else{
break
}
# Get google place name
if (length(tmp$result$name) != 0) {
name = tmp$result$name
} else{
name = "NULL"
}
det <- cbind(place_id = as.character(place_id[i]), name)
# Get google contact number
if (length(tmp$result$formatted_phone_number) != 0) {
phone_number = tmp$result$formatted_phone_number
} else{
phone_number = "NULL"
}
det <- cbind(det, phone_number)
# Get google contact number
if (length(tmp$result$formatted_phone_number) != 0) {
international_phone_number = tmp$result$formatted_phone_number
} else{
international_phone_number = "NULL"
}
det <- cbind(det, international_phone_number)
# Get google place address
if (length(tmp$result$formatted_address) != 0) {
address = tmp$result$formatted_address
} else{
address = "NULL"
}
det <- cbind(det, address)
# Get google place lat
if (length(tmp$result$formatted_address) != 0) {
lat = tmp$result$geometry$location$lat
} else{
lat = "NULL"
}
det <- cbind(det, lat)
# Get google place long
if (length(tmp$result$formatted_address) != 0) {
long = tmp$result$geometry$location$lng
} else{
long = "NULL"
}
det <- cbind(det, long)
# Get google place category
if (length(tmp$result$formatted_address) != 0) {
category = as.character(place_type[i])
} else{
category = "NULL"
}
det <- cbind(det, category)
# Get google place icon link
if (length(tmp$result$icon) != 0) {
icon_link = tmp$result$icon
} else{
icon_link = "NULL"
}
det <- cbind(det, icon_link)
# Get google place rating
if (length(tmp$result$rating) != 0) {
rating = tmp$result$rating
} else{
rating = "NULL"
}
det <- cbind(det, rating)
# Get google places website
if (length(tmp$result$website) != 0) {
website = tmp$result$website
} else{
website = "NULL"
}
det <- cbind(det, website)
#       if (length(tmp$result$id)!=0){
#         id = tmp$result$id
#       }else{
#         id = "NULL"
#       }
# det <- cbind(det,id)
# # Get google place url
#       if (length(tmp$result$url)!=0){
#         url = tmp$result$url
#       }else{
#         url = "NULL"
#       }
# det <- cbind(det,url)
details <- rbind(details, det)
fwrite(x = as.data.table(det),
file = details_dir,
append = TRUE)
print(paste("Done Processing", i, "Places"))
Sys.sleep(0.01)
}
df <- fread('../../Moonlight/google-places/g_places_moviehouses_batch1.csv')
df1 <- df[!duplicated(df),]
nrow(df1)
write.csv(df1, '../../Moonlight/google-places/g_places_moviehouses.csv', row.names = FALSE)
